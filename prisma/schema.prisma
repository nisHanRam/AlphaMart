generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                  Int               @id @default(autoincrement())
  username            String            @db.VarChar(255) @unique
  email               String            @db.VarChar(255) @unique
  password            String            @db.VarChar(255)
  role                Role              @default(BUYER)
  createdAt           DateTime          @db.Timestamptz(3) @default(now())
  products            Product[]
  orders              Order[]
  reviews             Review[]
}

model Product {
  id                  Int               @id @default(autoincrement())
  name                String            @db.VarChar(255)
  description         String            @db.Text
  price               Decimal           @db.Money
  stock               Int
  productCategory     ProductCategory   @relation(fields: [productCategoryId], references: [id])
  productCategoryId   Int
  seller              User              @relation(fields: [sellerId], references: [id])
  sellerId            Int
  createdAt           DateTime          @db.Timestamptz(3) @default(now())
  productImages       ProductImage[]
  reviews             Review[]
  orderItems          OrderItem[]
}

model ProductCategory {
  id                  Int               @id @default(autoincrement())
  name                String            @db.VarChar(255) @unique
  products            Product[]         
}

model ProductImage {
  id                  Int               @id @default(autoincrement())
  imageUrl            String            @db.VarChar(255)
  product             Product           @relation(fields: [productId], references: [id])
  productId           Int
}

model Review {
  id                  Int               @id @default(autoincrement())
  rating              Int
  comment             String?
  createdAt           DateTime          @db.Timestamptz(3) @default(now())
  reviewer            User              @relation(fields: [reviewerId], references: [id])
  reviewerId          Int
  product             Product           @relation(fields: [productId], references: [id])
  productId           Int
}

model Order {
  id                  Int               @id @default(autoincrement())
  totalAmount         Decimal           @db.Money
  paymentMethod       String            @db.VarChar(255)
  shippingAddress     String
  status              Status            @default(PENDING)
  createdAt           DateTime          @db.Timestamptz(3) @default(now())
  buyer               User              @relation(fields: [buyerId], references: [id])
  buyerId             Int
  orderItems          OrderItem[]
}

model OrderItem {
  id                  Int               @id @default(autoincrement())
  price               Decimal           @db.Money
  quantity            Int               
  product             Product           @relation(fields: [productId], references: [id])
  productId           Int
  order               Order             @relation(fields: [orderId], references: [id])
  orderId             Int
}

enum Role {
  BUYER
  SELLER
}

enum Status {
  PENDING
  SHIPPED
  DELIVERED
  CANCELLED
}